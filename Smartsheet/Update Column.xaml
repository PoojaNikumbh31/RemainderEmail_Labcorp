<Activity mc:Ignorable="sap sap2010" x:Class="Update_Column" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:s1="clr-namespace:Sterling_RPA_Custom_Activities;assembly=Sterling RPA Custom Activities" xmlns:sa="clr-namespace:Smartsheet.Api;assembly=smartsheet-csharp-sdk" xmlns:sam="clr-namespace:Smartsheet.Api.Models;assembly=smartsheet-csharp-sdk" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ubac="clr-namespace:UiPath.BAF.Activities.ContextModel;assembly=UiPath.Smartsheet.Activities" xmlns:ubme="clr-namespace:UiPath.BAF.Models.Entity;assembly=UiPath.Smartsheet" xmlns:ubmr="clr-namespace:UiPath.BAF.Models.Response;assembly=UiPath.Smartsheet" xmlns:ubt="clr-namespace:UiPath.BAF.Telemetry;assembly=UiPath.Smartsheet" xmlns:ucm="clr-namespace:UiPath.CodeGen.Model;assembly=UiPath.Smartsheet" xmlns:ucmc="clr-namespace:UiPath.CodeGen.Models.Connection;assembly=UiPath.Smartsheet" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:usa="clr-namespace:UiPath.Smartsheet.Activities;assembly=UiPath.Smartsheet.Activities" xmlns:usar="clr-namespace:UiPath.Smartsheet.Activities.Rows;assembly=UiPath.Smartsheet.Activities" xmlns:usas="clr-namespace:UiPath.Smartsheet.Activities.Sheets;assembly=UiPath.Smartsheet.Activities" xmlns:usm="clr-namespace:UiPath.Smartsheet.Models;assembly=UiPath.Smartsheet" xmlns:uss="clr-namespace:UiPath.Smartsheet.Services;assembly=UiPath.Smartsheet" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_SS_Col_ConciergeStatus" Type="InArgument(x:String)" />
    <x:Property Name="in_UpdateValue_ConciergeStatus" Type="InArgument(x:String)" />
    <x:Property Name="in_SS_Col_ConciergeNote" Type="InArgument(x:String)" />
    <x:Property Name="in_UpdateValue_ConciergeNote" Type="InArgument(x:String)" />
    <x:Property Name="in_RowIDs" Type="InArgument(x:String)" />
    <x:Property Name="in_SS_Col_ConfirmationNo" Type="InArgument(x:String)" />
    <x:Property Name="in_UpdateValue_ConfirmationNo" Type="InArgument(x:String)" />
    <x:Property Name="in_SS_Col_OOMComplete" Type="InArgument(x:String)" />
    <x:Property Name="in_SSColumns" Type="InArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <this:Update_Column.in_Config>
    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" />
  </this:Update_Column.in_Config>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>700,3546</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Update_Column_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="24">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.BAF.Models.Response</x:String>
      <x:String>UiPath.Smartsheet.Models</x:String>
      <x:String>Smartsheet.Api.Models</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="50">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Smartsheet</AssemblyReference>
      <AssemblyReference>smartsheet-csharp-sdk</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Update_Column" sap:VirtualizedContainerService.HintSize="680,3446" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="usm:SmartsheetConnection" Name="conn" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Int64)" Name="dictColumns" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="638,51" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Update Column Started&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <s1:LogMessage Logs="{x:Null}" DisplayName="Log message" sap:VirtualizedContainerService.HintSize="638,22" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="Update Column Started" />
    <usa:SmartsheetScopeActivity DesignConnectionRequest="{x:Null}" ExistingConnection="{x:Null}" SelectedDesignAuthType="{x:Null}" SwaggerClient="{x:Null}" sap2010:Annotation.AnnotationText="" Connection="[conn]" DesignConnectionEnabled="False" DisplayName="Smartsheet Application Scope (3845436172724100)" ExistingConnectionType="usm:SmartsheetConnection" sap:VirtualizedContainerService.HintSize="638,3048" sap2010:WorkflowViewState.IdRef="SmartsheetScopeActivity_2" RefreshCacheEnabled="False" SelectedAuthType="API Token" TelemetryEnabled="False" ThrowExceptionOnError="False">
      <usa:SmartsheetScopeActivity.Body>
        <ActivityAction x:TypeArguments="ubac:ScopeActivityContext">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ubac:ScopeActivityContext" Name="ScopeActivityContext" />
          </ActivityAction.Argument>
          <Sequence DisplayName="DO" sap:VirtualizedContainerService.HintSize="604,2907" sap2010:WorkflowViewState.IdRef="Sequence_7">
            <Sequence.Variables>
              <Variable x:TypeArguments="sam:Row[]" Default="[New Row(0){}]" Name="gRows" />
              <Variable x:TypeArguments="sam:Row[]" Name="rowsUpd" />
              <Variable x:TypeArguments="sam:Cell" Default="[New Cell()]" Name="upCell" />
              <Variable x:TypeArguments="sam:Row" Default="[New Row()]" Name="upRow" />
              <Variable x:TypeArguments="scg:List(sam:Row)" Default="[New List(of Row)]" Name="lstUpRows" />
              <Variable x:TypeArguments="scg:List(sam:Cell)" Default="[New List(of Cell)]" Name="lstUpCells" />
              <Variable x:TypeArguments="sam:Row[]" Name="resRows" />
              <Variable x:TypeArguments="ubmr:ResponseStatus" Name="respStatus" />
              <Variable x:TypeArguments="sam:Sheet" Name="sheetVal" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <usas:GetSheet Category="{x:Null}" FieldsSelectionPageProperties="{x:Null}" ScopeActivityType="{x:Null}" Section="{x:Null}" BusinessEntityName="GetSheet" ConfiguredBusinessEntity="GetSheet" CrudOperation="Function" DesignConnectionEnabled="False" DisplayName="Get Sheet" HideCascadingDropdown="False" sap:VirtualizedContainerService.HintSize="562,61" sap2010:WorkflowViewState.IdRef="GetSheet_1" Status="[respStatus]">
              <usas:GetSheet.BusinessEntity>
                <ubme:BusinessEntity AuthFields="{x:Null}" Connection="{x:Null}" Id="{x:Null}" Metadata="{x:Reference __ReferenceID0}" Name="GetSheet">
                  <ubme:BusinessEntity.AllFields>
                    <scg:List x:TypeArguments="ubme:EntityField" Capacity="0" />
                  </ubme:BusinessEntity.AllFields>
                  <ubme:BusinessEntity.EntityMetadata>
                    <ubme:EntityMetadata Description="{x:Null}" EligibleOperations="-1" IsCustomEntity="False" Name="GetSheet">
                      <ubme:EntityMetadata.Metadata>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object" x:Name="__ReferenceID0">
                          <x:Type Type="sa:SmartsheetClient" x:Key="Client" />
                        </scg:Dictionary>
                      </ubme:EntityMetadata.Metadata>
                    </ubme:EntityMetadata>
                  </ubme:BusinessEntity.EntityMetadata>
                  <ubme:BusinessEntity.SelectedFields>
                    <scg:List x:TypeArguments="ubme:EntityField" Capacity="10">
                      <x:Reference>__ReferenceID1</x:Reference>
                      <x:Reference>__ReferenceID2</x:Reference>
                      <x:Reference>__ReferenceID3</x:Reference>
                      <x:Reference>__ReferenceID4</x:Reference>
                      <x:Reference>__ReferenceID5</x:Reference>
                      <x:Reference>__ReferenceID6</x:Reference>
                      <x:Reference>__ReferenceID7</x:Reference>
                      <x:Reference>__ReferenceID8</x:Reference>
                      <x:Reference>__ReferenceID9</x:Reference>
                      <x:Reference>__ReferenceID10</x:Reference>
                    </scg:List>
                  </ubme:BusinessEntity.SelectedFields>
                  <ubme:BusinessEntity.TelemetryProperties>
                    <scg:Dictionary x:TypeArguments="ubt:TelemetryGroup, scg:IDictionary(x:String, x:String)" />
                  </ubme:BusinessEntity.TelemetryProperties>
                </ubme:BusinessEntity>
              </usas:GetSheet.BusinessEntity>
              <usas:GetSheet.PopulatedAPIParameters>
                <scg:Dictionary x:TypeArguments="x:String, ubme:EntityField" />
              </usas:GetSheet.PopulatedAPIParameters>
              <usas:GetSheet.SelectedFields>
                <scg:List x:TypeArguments="ubme:EntityField" Capacity="10">
                  <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Name="__ReferenceID1" ArgumentDirection="In" ArgumentType="x:Int64" DataType="Int64" Description="the Id of the sheet" DisplayName="SheetId" FieldName="SheetId" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="True" ShouldFilterOnChange="False">
                    <ucm:CodeGenEntityField.ArgumentValue>
                      <InArgument x:TypeArguments="x:Int64">4227194072393604</InArgument>
                    </ucm:CodeGenEntityField.ArgumentValue>
                  </ucm:CodeGenEntityField>
                  <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Name="__ReferenceID2" ArgumentDirection="In" ArgumentType="s:Int64[]" DataType="Int64[]" Description="used to specify the optional objects to include." DisplayName="ColumnIds" FieldName="ColumnIds" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                    <ucm:CodeGenEntityField.ArgumentValue>
                      <InArgument x:TypeArguments="s:Int64[]" />
                    </ucm:CodeGenEntityField.ArgumentValue>
                  </ucm:CodeGenEntityField>
                  <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Name="__ReferenceID3" ArgumentDirection="In" ArgumentType="sam:SheetLevelInclusion[]" DataType="SheetLevelInclusion[]" Description="used to specify the optional objects to include." DisplayName="Includes" FieldName="Includes" FormDataType="MultiSelect" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                    <ucm:CodeGenEntityField.ArgumentValue>
                      <InArgument x:TypeArguments="sam:SheetLevelInclusion[]" />
                    </ucm:CodeGenEntityField.ArgumentValue>
                  </ucm:CodeGenEntityField>
                  <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Name="__ReferenceID4" ArgumentDirection="In" ArgumentType="sam:SheetLevelExclusion[]" DataType="SheetLevelExclusion[]" Description="used to specify the optional objects to include." DisplayName="Excludes" FieldName="Excludes" FormDataType="MultiSelect" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                    <ucm:CodeGenEntityField.ArgumentValue>
                      <InArgument x:TypeArguments="sam:SheetLevelExclusion[]" />
                    </ucm:CodeGenEntityField.ArgumentValue>
                  </ucm:CodeGenEntityField>
                  <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Name="__ReferenceID5" ArgumentDirection="In" ArgumentType="s:Int64[]" DataType="Int64[]" Description="used to specify the optional objects to include." DisplayName="RowIds" FieldName="RowIds" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                    <ucm:CodeGenEntityField.ArgumentValue>
                      <InArgument x:TypeArguments="s:Int64[]" />
                    </ucm:CodeGenEntityField.ArgumentValue>
                  </ucm:CodeGenEntityField>
                  <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Name="__ReferenceID6" ArgumentDirection="In" ArgumentType="s:Int32[]" DataType="Int32[]" Description="RowNumbers" DisplayName="RowNumbers" FieldName="RowNumbers" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                    <ucm:CodeGenEntityField.ArgumentValue>
                      <InArgument x:TypeArguments="s:Int32[]" />
                    </ucm:CodeGenEntityField.ArgumentValue>
                  </ucm:CodeGenEntityField>
                  <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Name="__ReferenceID7" ArgumentDirection="In" ArgumentType="x:String" DataType="String" Description="Filter to return only rows that have been modified since the date/time" DisplayName="Rows Modified Since" FieldName="Rows Modified Since" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                    <ucm:CodeGenEntityField.ArgumentValue>
                      <InArgument x:TypeArguments="x:String">[Now.ToString("MM dd yyyy hh:mm:ss")]</InArgument>
                    </ucm:CodeGenEntityField.ArgumentValue>
                  </ucm:CodeGenEntityField>
                  <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Name="__ReferenceID8" ArgumentDirection="In" ArgumentType="x:Int32" DataType="Int32" Description="used to specify the optional objects to include." DisplayName="PageSize" FieldName="PageSize" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                    <ucm:CodeGenEntityField.ArgumentValue>
                      <InArgument x:TypeArguments="x:Int32">10000</InArgument>
                    </ucm:CodeGenEntityField.ArgumentValue>
                  </ucm:CodeGenEntityField>
                  <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Name="__ReferenceID9" ArgumentDirection="In" ArgumentType="x:Int32" DataType="Int32" Description="used to specify the optional objects to include." DisplayName="Page" FieldName="Page" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                    <ucm:CodeGenEntityField.ArgumentValue>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ucm:CodeGenEntityField.ArgumentValue>
                  </ucm:CodeGenEntityField>
                  <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Name="__ReferenceID10" ArgumentDirection="Out" ArgumentType="sam:Sheet" DataType="Sheet" Description="The sheet object" DisplayName="Sheet" FieldName="Sheet" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                    <ucm:CodeGenEntityField.ArgumentValue>
                      <OutArgument x:TypeArguments="sam:Sheet">[sheetVal]</OutArgument>
                    </ucm:CodeGenEntityField.ArgumentValue>
                  </ucm:CodeGenEntityField>
                </scg:List>
              </usas:GetSheet.SelectedFields>
              <usas:GetSheet.ServiceFactory>
                <uss:SmartsheetServiceFactory />
              </usas:GetSheet.ServiceFactory>
              <usas:GetSheet.TelemetryProperties>
                <scg:Dictionary x:TypeArguments="ubt:TelemetryGroup, scg:IDictionary(x:String, x:String)" />
              </usas:GetSheet.TelemetryProperties>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </usas:GetSheet>
            <If Condition="[respStatus.Success]" DisplayName="Success?" sap:VirtualizedContainerService.HintSize="562,208" sap2010:WorkflowViewState.IdRef="If_1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Else>
                <Throw Exception="[New SystemException(&quot;Accessing smartsheet Failed : &quot;+respStatus.Message)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
              </If.Else>
            </If>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="562,91" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Fetching column id's completed&quot;]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LogMessage>
            <s1:LogMessage Logs="{x:Null}" DisplayName="Log message" sap:VirtualizedContainerService.HintSize="562,22" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="Fetching column id's completed" />
            <Assign DisplayName="dictColumns" sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_14">
              <Assign.To>
                <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Int64)">[dictColumns]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Int64)">[New Dictionary(of String,Int64)]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:ForEach x:TypeArguments="sam:Column" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Key - Column Name , Value - Column ID" DisplayName="For Each Column" sap:VirtualizedContainerService.HintSize="562,221" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[sheetVal.Columns]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="sam:Column">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sam:Column" Name="item" />
                  </ActivityAction.Argument>
                  <Assign DisplayName="Add to Dict" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int64">[dictColumns(item.Title)]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int64">[item.Id.Value]</InArgument>
                    </Assign.Value>
                  </Assign>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
            <Assign DisplayName="Status Column ID" sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_10">
              <Assign.To>
                <OutArgument x:TypeArguments="s:Nullable(x:Int64)">[upCell.ColumnId]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:Nullable(x:Int64)">[dictColumns(in_SS_Col_ConciergeStatus)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Status Value" sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_11">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[upCell.Value]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">[in_UpdateValue_ConciergeStatus]</InArgument>
              </Assign.Value>
            </Assign>
            <AddToCollection x:TypeArguments="sam:Cell" Collection="[lstUpCells]" DisplayName="Add To Collection" sap:VirtualizedContainerService.HintSize="562,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="[upCell]" />
            <Assign DisplayName="Reset Cell" sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_17">
              <Assign.To>
                <OutArgument x:TypeArguments="sam:Cell">[upCell]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sam:Cell">[New Cell()]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Notes Column ID" sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_15">
              <Assign.To>
                <OutArgument x:TypeArguments="s:Nullable(x:Int64)">[upCell.ColumnId]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int64">[dictColumns(in_SS_Col_ConciergeNote)]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Notes Value" sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_16">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[upCell.Value]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[in_UpdateValue_ConciergeNote]</InArgument>
              </Assign.Value>
            </Assign>
            <AddToCollection x:TypeArguments="sam:Cell" Collection="[lstUpCells]" DisplayName="Add Cells To Collection" sap:VirtualizedContainerService.HintSize="562,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4" Item="[upCell]" />
            <If Condition="[in_UpdateValue_ConfirmationNo.Equals(&quot;&quot;)]" sap:VirtualizedContainerService.HintSize="562,51" sap2010:WorkflowViewState.IdRef="If_3">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="304,414" sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Reset Cell" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sam:Cell">[upCell]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sam:Cell">[New Cell()]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Confirmation No Column ID" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:Nullable(x:Int64)">[upCell.ColumnId]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:Nullable(x:Int64)">[dictColumns(in_SS_Col_ConfirmationNo)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Confirmation No Value" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Object">[upCell.Value]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[in_UpdateValue_ConfirmationNo]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <AddToCollection x:TypeArguments="sam:Cell" Collection="[lstUpCells]" DisplayName="Add Cells To Collection" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_5" Item="[upCell]" />
                </Sequence>
              </If.Else>
            </If>
            <Assign DisplayName="Reset Cell" sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_22">
              <Assign.To>
                <OutArgument x:TypeArguments="sam:Cell">[upCell]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sam:Cell">[New Cell()]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="OOM Completed Column ID" sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_23">
              <Assign.To>
                <OutArgument x:TypeArguments="s:Nullable(x:Int64)">[upCell.ColumnId]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="s:Nullable(x:Int64)">[int64.Parse(in_SSColumns(in_SS_Col_OOMComplete).ToString.Split("|"c)(0))]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="OOM Completed Value" sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_24">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[upCell.Value]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">[True]</InArgument>
              </Assign.Value>
            </Assign>
            <AddToCollection x:TypeArguments="sam:Cell" Collection="[lstUpCells]" DisplayName="Add Cells To Collection" sap:VirtualizedContainerService.HintSize="562,22" sap2010:WorkflowViewState.IdRef="AddToCollection`1_6" Item="[upCell]" />
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each RowID" sap:VirtualizedContainerService.HintSize="562,835" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[in_RowIDs.Split(&quot;;&quot;c).ToList()]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="RowID" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,544" sap2010:WorkflowViewState.IdRef="Sequence_8">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign DisplayName="Reset Row" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                      <Assign.To>
                        <OutArgument x:TypeArguments="sam:Row">[upRow]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="sam:Row">[New Row()]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:Nullable(x:Int64)">[upRow.Id]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:Nullable(x:Int64)">[int64.Parse( RowID)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                      <Assign.To>
                        <OutArgument x:TypeArguments="scg:IList(sam:Cell)">[upRow.Cells]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="scg:IList(sam:Cell)">[lstUpCells]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <usar:UpdateRows Category="{x:Null}" FieldsSelectionPageProperties="{x:Null}" ScopeActivityType="{x:Null}" Section="{x:Null}" BusinessEntityName="UpdateRows" ConfiguredBusinessEntity="UpdateRows" CrudOperation="Function" DesignConnectionEnabled="False" DisplayName="Update Rows" HideCascadingDropdown="False" sap:VirtualizedContainerService.HintSize="334,61" sap2010:WorkflowViewState.IdRef="UpdateRows_3" Status="[respStatus]">
                      <usar:UpdateRows.BusinessEntity>
                        <ubme:BusinessEntity AuthFields="{x:Null}" Connection="{x:Null}" Id="{x:Null}" Metadata="{x:Reference __ReferenceID11}" Name="UpdateRows">
                          <ubme:BusinessEntity.AllFields>
                            <scg:List x:TypeArguments="ubme:EntityField" Capacity="0" />
                          </ubme:BusinessEntity.AllFields>
                          <ubme:BusinessEntity.EntityMetadata>
                            <ubme:EntityMetadata Description="{x:Null}" EligibleOperations="-1" IsCustomEntity="False" Name="UpdateRows">
                              <ubme:EntityMetadata.Metadata>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object" x:Name="__ReferenceID11">
                                  <x:Type Type="sa:SmartsheetClient" x:Key="Client" />
                                </scg:Dictionary>
                              </ubme:EntityMetadata.Metadata>
                            </ubme:EntityMetadata>
                          </ubme:BusinessEntity.EntityMetadata>
                          <ubme:BusinessEntity.SelectedFields>
                            <scg:List x:TypeArguments="ubme:EntityField" Capacity="4">
                              <x:Reference>__ReferenceID12</x:Reference>
                              <x:Reference>__ReferenceID13</x:Reference>
                              <x:Reference>__ReferenceID14</x:Reference>
                              <x:Reference>__ReferenceID15</x:Reference>
                            </scg:List>
                          </ubme:BusinessEntity.SelectedFields>
                          <ubme:BusinessEntity.TelemetryProperties>
                            <scg:Dictionary x:TypeArguments="ubt:TelemetryGroup, scg:IDictionary(x:String, x:String)" />
                          </ubme:BusinessEntity.TelemetryProperties>
                        </ubme:BusinessEntity>
                      </usar:UpdateRows.BusinessEntity>
                      <usar:UpdateRows.PopulatedAPIParameters>
                        <scg:Dictionary x:TypeArguments="x:String, ubme:EntityField">
                          <ubme:EntityField DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Key="RowsArrayItem1" ArgumentDirection="In" ArgumentType="sam:Row" DataType="Smartsheet.Api.Models.Row" Description="An array of Row objects." FieldName="RowsArrayItem1" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                            <ubme:EntityField.ArgumentValue>
                              <InArgument x:TypeArguments="sam:Row">[upRow]</InArgument>
                            </ubme:EntityField.ArgumentValue>
                          </ubme:EntityField>
                        </scg:Dictionary>
                      </usar:UpdateRows.PopulatedAPIParameters>
                      <usar:UpdateRows.SelectedFields>
                        <scg:List x:TypeArguments="ubme:EntityField" Capacity="4">
                          <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Name="__ReferenceID12" ArgumentDirection="In" ArgumentType="x:Int64" DataType="Int64" Description="The id of the sheet." DisplayName="Sheet Id" FieldName="Sheet Id" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="True" ShouldFilterOnChange="False">
                            <ucm:CodeGenEntityField.ArgumentValue>
                              <InArgument x:TypeArguments="x:Int64">4227194072393604</InArgument>
                            </ucm:CodeGenEntityField.ArgumentValue>
                          </ucm:CodeGenEntityField>
                          <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Name="__ReferenceID13" ArgumentDirection="In" ArgumentType="sam:Row[]" DataType="Row[]" Description="An array of Row objects." DisplayName="Rows" FieldName="Rows" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                            <ucm:CodeGenEntityField.ArgumentValue>
                              <InArgument x:TypeArguments="sam:Row[]" />
                            </ucm:CodeGenEntityField.ArgumentValue>
                          </ucm:CodeGenEntityField>
                          <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Name="__ReferenceID14" ArgumentDirection="In" ArgumentType="sd:DataTable" DataType="DataTable" Description="A data table that contains row information." DisplayName="Row Data" FieldName="Row Data" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                            <ucm:CodeGenEntityField.ArgumentValue>
                              <InArgument x:TypeArguments="sd:DataTable" />
                            </ucm:CodeGenEntityField.ArgumentValue>
                          </ucm:CodeGenEntityField>
                          <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" x:Name="__ReferenceID15" ArgumentDirection="Out" ArgumentType="sam:Row[]" DataType="Row[]" Description="The rows successfully updated." DisplayName="Rows Updated" FieldName="Rows Updated" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                            <ucm:CodeGenEntityField.ArgumentValue>
                              <OutArgument x:TypeArguments="sam:Row[]">[rowsUpd]</OutArgument>
                            </ucm:CodeGenEntityField.ArgumentValue>
                          </ucm:CodeGenEntityField>
                        </scg:List>
                      </usar:UpdateRows.SelectedFields>
                      <usar:UpdateRows.ServiceFactory>
                        <uss:SmartsheetServiceFactory />
                      </usar:UpdateRows.ServiceFactory>
                      <usar:UpdateRows.TelemetryProperties>
                        <scg:Dictionary x:TypeArguments="ubt:TelemetryGroup, scg:IDictionary(x:String, x:String)" />
                      </usar:UpdateRows.TelemetryProperties>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </usar:UpdateRows>
                    <If Condition="[respStatus.Success]" DisplayName="Success?" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="If_2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Else>
                        <Throw Exception="[New SystemException(&quot;Updating column &quot;+in_SS_Col_ConciergeStatus+&quot; Failed : &quot;+respStatus.Message)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_2" />
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
          </Sequence>
        </ActivityAction>
      </usa:SmartsheetScopeActivity.Body>
      <usa:SmartsheetScopeActivity.ConnectionParameters>
        <scg:List x:TypeArguments="ucmc:ConnectionParam" Capacity="4">
          <ucmc:ConnectionParam Value="{x:Null}" ArgumentDirection="In" ArgumentType="x:String" Description="The API token to use" Mandatory="True" Name="API Access Token">
            <ucmc:ConnectionParam.ArgumentValue>
              <InArgument x:TypeArguments="x:String">[in_Config("SmartSheet_AccessToken").ToString]</InArgument>
            </ucmc:ConnectionParam.ArgumentValue>
          </ucmc:ConnectionParam>
        </scg:List>
      </usa:SmartsheetScopeActivity.ConnectionParameters>
      <usa:SmartsheetScopeActivity.DesignConnectionParameters>
        <scg:List x:TypeArguments="ucmc:ConnectionParam" Capacity="0" />
      </usa:SmartsheetScopeActivity.DesignConnectionParameters>
      <usa:SmartsheetScopeActivity.ServiceFactory>
        <uss:SmartsheetServiceFactory />
      </usa:SmartsheetScopeActivity.ServiceFactory>
      <usa:SmartsheetScopeActivity.SupportedAuthTypes>
        <scg:List x:TypeArguments="x:String" Capacity="4">
          <x:String>Existing Connection</x:String>
          <x:String>OAuth Authorization Code</x:String>
          <x:String>API Token</x:String>
          <x:String xml:space="preserve">OAuth Passthrough </x:String>
        </scg:List>
      </usa:SmartsheetScopeActivity.SupportedAuthTypes>
      <usa:SmartsheetScopeActivity.TelemetryProperties>
        <scg:Dictionary x:TypeArguments="ubt:TelemetryGroup, scg:IDictionary(x:String, x:String)" />
      </usa:SmartsheetScopeActivity.TelemetryProperties>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </usa:SmartsheetScopeActivity>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="638,51" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Update Column Ended&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <s1:LogMessage Logs="{x:Null}" DisplayName="Log message" sap:VirtualizedContainerService.HintSize="638,22" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="Update Column Started" />
  </Sequence>
</Activity>