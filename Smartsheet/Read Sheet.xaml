<Activity mc:Ignorable="sap sap2010" x:Class="Read_Sheet" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:Sterling_RPA_Custom_Activities;assembly=Sterling RPA Custom Activities" xmlns:s1="clr-namespace:System;assembly=mscorlib" xmlns:sa="clr-namespace:Smartsheet.Api;assembly=smartsheet-csharp-sdk" xmlns:sam="clr-namespace:Smartsheet.Api.Models;assembly=smartsheet-csharp-sdk" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:this="clr-namespace:" xmlns:ubac="clr-namespace:UiPath.BAF.Activities.ContextModel;assembly=UiPath.Smartsheet.Activities" xmlns:ubme="clr-namespace:UiPath.BAF.Models.Entity;assembly=UiPath.Smartsheet" xmlns:ubmr="clr-namespace:UiPath.BAF.Models.Response;assembly=UiPath.Smartsheet" xmlns:ubt="clr-namespace:UiPath.BAF.Telemetry;assembly=UiPath.Smartsheet" xmlns:ucm="clr-namespace:UiPath.CodeGen.Model;assembly=UiPath.Smartsheet" xmlns:ucmc="clr-namespace:UiPath.CodeGen.Models.Connection;assembly=UiPath.Smartsheet" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:usa="clr-namespace:UiPath.Smartsheet.Activities;assembly=UiPath.Smartsheet.Activities" xmlns:usar="clr-namespace:UiPath.Smartsheet.Activities.Reports;assembly=UiPath.Smartsheet.Activities" xmlns:usm="clr-namespace:UiPath.Smartsheet.Models;assembly=UiPath.Smartsheet" xmlns:uss="clr-namespace:UiPath.Smartsheet.Services;assembly=UiPath.Smartsheet" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="out_dtRowID" Type="OutArgument(sd:DataTable)" />
  </x:Members>
  <this:Read_Sheet.in_Config>
    <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" />
  </this:Read_Sheet.in_Config>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1172,4830</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Read_Sheet_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="28">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Smartsheet.Api.Models</x:String>
      <x:String>UiPath.BAF.Models.Response</x:String>
      <x:String>UiPath.Smartsheet.Models</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Database</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="60">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>smartsheet-csharp-sdk</AssemblyReference>
      <AssemblyReference>UiPath.Smartsheet</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Cryptography</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Read_Sheet" sap:VirtualizedContainerService.HintSize="1152,4770" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="usm:SmartsheetConnection" Name="conn" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtRowID" />
      <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="qItems" />
      <Variable x:TypeArguments="x:String" Name="insertQry" />
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="dbConn" />
      <Variable x:TypeArguments="x:Boolean" Name="bln_newData" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1110,51" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Info" Message="[&quot;Read SmartSheet Started&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <s:LogMessage Logs="{x:Null}" DisplayName="Log message" sap:VirtualizedContainerService.HintSize="1110,22" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="Info" Message="Read SmartSheet Started" />
    <ui:BuildDataTable DataTable="[dtRowID]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="1110,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_2" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;RowID&quot; type=&quot;xs:string&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:BuildDataTable>
    <usa:SmartsheetScopeActivity DesignConnectionRequest="{x:Null}" ExistingConnection="{x:Null}" SelectedDesignAuthType="{x:Null}" SwaggerClient="{x:Null}" Connection="[conn]" DesignConnectionEnabled="False" DisplayName="Smartsheet Application Scope" ExistingConnectionType="usm:SmartsheetConnection" sap:VirtualizedContainerService.HintSize="1110,4142" sap2010:WorkflowViewState.IdRef="SmartsheetScopeActivity_2" RefreshCacheEnabled="False" SelectedAuthType="API Token" TelemetryEnabled="False" ThrowExceptionOnError="False">
      <usa:SmartsheetScopeActivity.Body>
        <ActivityAction x:TypeArguments="ubac:ScopeActivityContext">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ubac:ScopeActivityContext" Name="ScopeActivityContext" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="1076,4001" sap2010:WorkflowViewState.IdRef="Sequence_30">
            <Sequence.Variables>
              <Variable x:TypeArguments="ubmr:ResponseStatus" Name="respStatus" />
              <Variable x:TypeArguments="sam:Report" Name="rpt" />
              <Variable x:TypeArguments="x:Int32" Name="index" />
              <Variable x:TypeArguments="x:String" Name="availableRowIDs" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1034,91" sap2010:WorkflowViewState.IdRef="LogMessage_26" Level="Info" Message="[&quot;Reading Report...&quot;]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LogMessage>
            <usar:GetReport BusinessEntityName="{x:Null}" ConfiguredBusinessEntity="GetReport" CrudOperation="Function" DesignConnectionEnabled="False" DisplayName="Get Report" sap:VirtualizedContainerService.HintSize="1034,236" sap2010:WorkflowViewState.IdRef="GetReport_3" ScopeActivityType="usa:SmartsheetScopeActivity" Status="[respStatus]">
              <usar:GetReport.BusinessEntity>
                <ubme:BusinessEntity AuthFields="{x:Null}" Connection="{x:Null}" Id="{x:Null}" Metadata="{x:Reference __ReferenceID0}" Name="GetReport">
                  <ubme:BusinessEntity.AllFields>
                    <scg:List x:TypeArguments="ubme:EntityField" Capacity="0" />
                  </ubme:BusinessEntity.AllFields>
                  <ubme:BusinessEntity.EntityMetadata>
                    <ubme:EntityMetadata Description="{x:Null}" EligibleOperations="-1" IsCustomEntity="False" Name="GetReport">
                      <ubme:EntityMetadata.Metadata>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object" x:Name="__ReferenceID0">
                          <x:Type Type="sa:SmartsheetClient" x:Key="Client" />
                        </scg:Dictionary>
                      </ubme:EntityMetadata.Metadata>
                    </ubme:EntityMetadata>
                  </ubme:BusinessEntity.EntityMetadata>
                  <ubme:BusinessEntity.SelectedFields>
                    <scg:List x:TypeArguments="ubme:EntityField" Capacity="0" />
                  </ubme:BusinessEntity.SelectedFields>
                  <ubme:BusinessEntity.TelemetryProperties>
                    <scg:Dictionary x:TypeArguments="ubt:TelemetryGroup, scg:IDictionary(x:String, x:String)" />
                  </ubme:BusinessEntity.TelemetryProperties>
                </ubme:BusinessEntity>
              </usar:GetReport.BusinessEntity>
              <usar:GetReport.PopulatedAPIParameters>
                <scg:Dictionary x:TypeArguments="x:String, ubme:EntityField" />
              </usar:GetReport.PopulatedAPIParameters>
              <usar:GetReport.SelectedFields>
                <scg:List x:TypeArguments="ubme:EntityField" Capacity="8">
                  <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" ArgumentDirection="In" ArgumentType="x:Int64" DataType="Int64" Description="the Id of the report" DisplayName="ReportId" FieldName="ReportId" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="True" ShouldFilterOnChange="False">
                    <ucm:CodeGenEntityField.ArgumentValue>
                      <InArgument x:TypeArguments="x:Int64">[int64.Parse(in_Config("SmartSheet_Report_ID").ToString)]</InArgument>
                    </ucm:CodeGenEntityField.ArgumentValue>
                  </ucm:CodeGenEntityField>
                  <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" ArgumentDirection="In" ArgumentType="x:String" DataType="String" Description="If populated will download the report to the specified folder" DisplayName="Local Folder" FieldName="Local Folder" FormDataType="FolderPicker" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                    <ucm:CodeGenEntityField.ArgumentValue>
                      <InArgument x:TypeArguments="x:String" />
                    </ucm:CodeGenEntityField.ArgumentValue>
                  </ucm:CodeGenEntityField>
                  <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" ArgumentDirection="In" ArgumentType="sam:ReportInclusion[]" DataType="ReportInclusion[]" Description="used to specify the optional objects to include." DisplayName="Include" FieldName="Include" FormDataType="MultiSelect" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                    <ucm:CodeGenEntityField.ArgumentValue>
                      <InArgument x:TypeArguments="sam:ReportInclusion[]" />
                    </ucm:CodeGenEntityField.ArgumentValue>
                  </ucm:CodeGenEntityField>
                  <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" ArgumentDirection="In" ArgumentType="x:Int32" DataType="Int32" Description="Number of rows per page" DisplayName="Page Size" FieldName="Page Size" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                    <ucm:CodeGenEntityField.ArgumentValue>
                      <InArgument x:TypeArguments="x:Int32">10000</InArgument>
                    </ucm:CodeGenEntityField.ArgumentValue>
                  </ucm:CodeGenEntityField>
                  <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" ArgumentDirection="In" ArgumentType="x:Int32" DataType="Int32" Description="Page number (1-based) to return" DisplayName="Page" FieldName="Page" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                    <ucm:CodeGenEntityField.ArgumentValue>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ucm:CodeGenEntityField.ArgumentValue>
                  </ucm:CodeGenEntityField>
                  <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" ArgumentDirection="Out" ArgumentType="sam:Report" DataType="Report" Description="The report object" DisplayName="Report" FieldName="Report" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                    <ucm:CodeGenEntityField.ArgumentValue>
                      <OutArgument x:TypeArguments="sam:Report">[rpt]</OutArgument>
                    </ucm:CodeGenEntityField.ArgumentValue>
                  </ucm:CodeGenEntityField>
                </scg:List>
              </usar:GetReport.SelectedFields>
              <usar:GetReport.ServiceFactory>
                <uss:SmartsheetServiceFactory />
              </usar:GetReport.ServiceFactory>
              <usar:GetReport.TelemetryProperties>
                <scg:Dictionary x:TypeArguments="ubt:TelemetryGroup, scg:IDictionary(x:String, x:String)" />
              </usar:GetReport.TelemetryProperties>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </usar:GetReport>
            <If Condition="[respStatus.Success]" DisplayName="Success?" sap:VirtualizedContainerService.HintSize="1034,214" sap2010:WorkflowViewState.IdRef="If_8">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Success" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_26">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ForEach x:TypeArguments="sam:ReportColumn" CurrentIndex="[index]" DisplayName="For Each Column Name" sap:VirtualizedContainerService.HintSize="307,248" sap2010:WorkflowViewState.IdRef="ForEach`1_12" Values="[rpt.Columns]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="sam:ReportColumn">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sam:ReportColumn" Name="item" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_23">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:AddDataColumn x:TypeArguments="x:String" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" Unique="{x:Null}" AllowDBNull="True" ColumnName="[item.Title]" DataTable="[dtRowID]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_4" MaxLength="10000" />
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                  <ui:ForEach x:TypeArguments="sam:ReportRow" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Fetch Row ID" DisplayName="For Each Row " sap:VirtualizedContainerService.HintSize="307,78" sap2010:WorkflowViewState.IdRef="ForEach`1_14" Values="[rpt.Rows]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="sam:ReportRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sam:ReportRow" Name="row" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="304,405" sap2010:WorkflowViewState.IdRef="Sequence_25">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="sd:DataRow" Name="rowArr" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="New Row Data" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_25">
                            <Assign.To>
                              <OutArgument x:TypeArguments="sd:DataRow">[rowArr]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="sd:DataRow">[dtRowID.NewRow]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Row ID" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_26">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[rowArr(0)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[row.Id.Value.ToString]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:ForEach x:TypeArguments="sam:ReportColumn" CurrentIndex="[index]" DisplayName="For Each Column" sap:VirtualizedContainerService.HintSize="262,51" sap2010:WorkflowViewState.IdRef="ForEach`1_13" Values="[rpt.Columns]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="sam:ReportColumn">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="sam:ReportColumn" Name="rcVal" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If Condition="[Not String.IsNullOrEmpty(row.Cells(index).DisplayValue)]" sap:VirtualizedContainerService.HintSize="569,208" sap2010:WorkflowViewState.IdRef="If_7">
                                    <If.Then>
                                      <Assign DisplayName="Cell value" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[rowArr(index+1)]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Object">[row.Cells(index).DisplayValue.ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                    <If.Else>
                                      <Assign DisplayName="Cell value" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[rowArr(index+1)]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Object">[row.Cells(index).Value]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Else>
                                  </If>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ForEach>
                          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[rowArr]" DataTable="[dtRowID]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="262,22" sap2010:WorkflowViewState.IdRef="AddDataRow_3" />
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                </Sequence>
              </If.Then>
              <If.Else>
                <Throw Exception="[New SystemException(&quot;Accessing Report Failed : &quot;+respStatus.Message)]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Throw_1" />
              </If.Else>
            </If>
            <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" Top="{x:Null}" DisplayName="Get Queue Items" FilterStrategy="StartsWith" FolderPath="Health Care" sap:VirtualizedContainerService.HintSize="1034,22" sap2010:WorkflowViewState.IdRef="GetQueueItems_1" QueueItemStates="All" QueueName="[in_Config(&quot;OrchestratorQueueName&quot;).ToString]" Reference="[Now.ToString(&quot;MM-dd-yyyy&quot;)+&quot;||&quot;]" Result="[qItems]" />
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1034,91" sap2010:WorkflowViewState.IdRef="LogMessage_27" Level="Info" Message="[&quot;Total Rows in Report : &quot;+dtRowID.Rows.Count.ToString]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LogMessage>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1034,51" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Info" Message="[&quot;Total Queue count on &quot;+Now.ToString(&quot;MM-dd-yyyy&quot;)+&quot; : &quot;+qItems.Count.ToString]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LogMessage>
            <If Condition="[qItems.Count=0]" sap:VirtualizedContainerService.HintSize="1034,779" sap2010:WorkflowViewState.IdRef="If_13">
              <If.Then>
                <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_36">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Boolean">[bln_newData]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="526,631" sap2010:WorkflowViewState.IdRef="Sequence_36">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="availableRowIDs" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_29">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[availableRowIDs]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[string.Join(";",dtRowID.AsEnumerable.Where(Function(y) qItems.where(function(x) x.SpecificContent("RowIDs").ToString.Contains(y.Item("RowID").ToString)).Count &gt; 0).CopyToDataTable.AsEnumerable.Select(function(x) x.Item("RowID").ToString).ToList())]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="484,91" sap2010:WorkflowViewState.IdRef="LogMessage_29" Level="Info" Message="[&quot;Existed Rows count : &quot;+ availableRowIDs.Split(&quot;;&quot;c).Count.ToString]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                  <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_37">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[bln_newData]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">[dtRowID.AsEnumerable.Where( Function(x) not availableRowIDs.Contains( x.Item("RowID").ToString)).Count&gt;0]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If Condition="[bln_newData]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_12">
                    <If.Then>
                      <Assign DisplayName="Filter UnDispatched RowID" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_30">
                        <Assign.To>
                          <OutArgument x:TypeArguments="sd:DataTable">[dtRowID]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="sd:DataTable">[dtRowID.AsEnumerable.Where( Function(x) not availableRowIDs.Contains( x.Item("RowID").ToString)).CopyToDataTable]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                  </If>
                </Sequence>
              </If.Else>
            </If>
            <If sap2010:Annotation.AnnotationText="Any new rows?" Condition="[bln_newData]" DisplayName="New data" sap:VirtualizedContainerService.HintSize="1034,1992" sap2010:WorkflowViewState.IdRef="If_9">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="655,1817" sap2010:WorkflowViewState.IdRef="Sequence_29">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="613,51" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Info" Message="[&quot;New Rows count : &quot;+dtRowID.Rows.Count.ToString]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                  <ui:ForEachRow CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Add to SQL DB" DataTable="[dtRowID]" DisplayName="For Each Row" sap:VirtualizedContainerService.HintSize="613,1425" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="563,1250" sap2010:WorkflowViewState.IdRef="Sequence_27">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="x:Int32" Name="dbResult" />
                            <Variable x:TypeArguments="sd:DataTable" Name="DB_dt" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ConnectDatabase workflow" sap:VirtualizedContainerService.HintSize="521,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Database\ConnectDatabase.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <OutArgument x:TypeArguments="ui:DatabaseConnection" x:Key="Conn">[dbConn]</OutArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                          <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[DB_dt]" DisplayName="Execute Query" ExistingDbConnection="[dbConn]" sap:VirtualizedContainerService.HintSize="521,88" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="[“select * from dhs_RemainderEmailLabcorp_Data WHERE request_id = @ReqId”]">
                            <ui:ExecuteQuery.Parameters>
                              <InArgument x:TypeArguments="x:String" x:Key="ReqId">[row("ReqID (Search)").ToString()]</InArgument>
                            </ui:ExecuteQuery.Parameters>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ExecuteQuery>
                          <If Condition="[DB_dt.Rows.Count=0]" sap:VirtualizedContainerService.HintSize="521,841" sap2010:WorkflowViewState.IdRef="If_10">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="376,693" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="ui:GenericValue" Name="str_searchStatus" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="CommentOut_9">
                                  <ui:CommentOut.Body>
                                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,180" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Non Query" ExistingDbConnection="[Conn]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_2" Sql="insert into dhs_RemainderEmailLabcorp_Data (row_id,order_id,request_id,firstname,lastname,vendor,juris_desc,registered_date,expiration_date,search_status) values (@row_id,@order_id,@request_id,@firstname,@lastname,@vendor,@juris_desc,@registered_date,@expiration_date,@search_status)">
                                        <ui:ExecuteNonQuery.Parameters>
                                          <InArgument x:TypeArguments="x:String" x:Key="order_id">[row("Order ID").ToString()]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="request_id">[row("ReqID (Search)").ToString()]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="firstname">[row("Candidate First Name").ToString()]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="lastname">[row("Candidate Last Name").ToString()]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="juris_desc">[row("JurisDesc").ToString()]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="search_status">New</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="vendor">[row("Vendor").ToString()]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="registered_date">[row("Registered Date").ToString()]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="expiration_date">[row("Expiration Date").ToString()]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="row_id">[row("RowID").ToString()]</InArgument>
                                        </ui:ExecuteNonQuery.Parameters>
                                      </ui:ExecuteNonQuery>
                                    </Sequence>
                                  </ui:CommentOut.Body>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:CommentOut>
                                <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="ui:GenericValue">[str_searchStatus]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="ui:GenericValue">["New"]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:CommentOut DisplayName="Enable when the data will be fetched from Report" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="CommentOut_10">
                                  <ui:CommentOut.Body>
                                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="304,152" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign DisplayName="insertQry" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_34">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[insertQry]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">["insert into "+in_Config("SQL_Tablename_Processing_Orders").ToString+" ([row_id],[order_id],[request_id],[firstname],[lastname],[primary_email],[vendor],[registered_date],[expiration_date],[juris_desc]) values('"+row("RowID").ToString+"','"+row("Order ID").ToString+"','"+row("ReqID (Search)").ToString+"','"+row("Candidate First Name").ToString+"','"+row("Candidate Last Name").ToString+"','"+row("Primary").ToString+"','"+row("Vendor").ToString+"','"+row("Registration Date").ToString+"','"+row("Expiration Date").ToString+"','"+row("JurisDesc").ToString+"')"]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </ui:CommentOut.Body>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:CommentOut>
                                <Assign DisplayName="insertQry (Disable when running from Report)" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_35">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[insertQry]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">["insert into "+in_Config("SQL_Tablename_Processing_Orders").ToString+" ([row_id],[order_id],[request_id],[vendor],[firstname],[lastname],[registered_date],[expiration_date],[juris_desc],[primary_email],[search_status]) values('"+row("RowID").ToString+"','"+row("Order ID").ToString+"','"+row("ReqID (Search)").ToString+"','"+row("Vendor").ToString+"','"+row("Candidate First Name").ToString+"','"+row("Candidate Last Name").ToString+"','"+row("Registered Date").ToString+"','"+row("Expiration Date").ToString+"','"+row("JurisDesc").ToString+"','"+row("Primary").ToString+"','"+str_searchStatus.ToString+"')"]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_37" Message="[insertQry]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:LogMessage>
                                <ui:ExecuteNonQuery AffectedRecords="{x:Null}" ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DisplayName="Execute Non Query" ExistingDbConnection="[dbConn]" sap:VirtualizedContainerService.HintSize="334,88" sap2010:WorkflowViewState.IdRef="ExecuteNonQuery_3" Sql="[insertQry]">
                                  <ui:ExecuteNonQuery.Parameters>
                                    <InArgument x:TypeArguments="x:String" x:Key="order_id">[row("Order ID").ToString()]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="request_id">[row("ReqID (Search)").ToString()]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="juris_desc">[row("JurisDesc").ToString()]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="search_status">New</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="vendor">[row("Vendor").ToString()]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="registered_date">[row("Registered Date").ToString()]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="expiration_date">[row("Expiration Date").ToString()]</InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="row_id">[row("RowID").ToString()]</InArgument>
                                  </ui:ExecuteNonQuery.Parameters>
                                </ui:ExecuteNonQuery>
                              </Sequence>
                            </If.Then>
                          </If>
                          <ui:DatabaseDisconnect DatabaseConnection="[dbConn]" DisplayName="Disconnect" sap:VirtualizedContainerService.HintSize="521,22" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_1" />
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEachRow>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="613,51" sap2010:WorkflowViewState.IdRef="LogMessage_32" Level="Info" Message="[&quot;Add to Queue Started&quot;]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Add to Queue" DisplayName="For Each Unique Order ID" sap:VirtualizedContainerService.HintSize="613,78" sap2010:WorkflowViewState.IdRef="ForEach`1_15" Values="[dtRowID.AsEnumerable.Select(Function(x) x.Item(&quot;Order ID&quot;).ToString).Distinct().ToList()]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,531" sap2010:WorkflowViewState.IdRef="Sequence_28">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="sd:DataRow" Name="rowArr" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_32">
                            <Assign.To>
                              <OutArgument x:TypeArguments="sd:DataRow">[rowArr]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="sd:DataRow">[dtRowID.AsEnumerable.Where(function(x) X("Order ID").ToString = item)(0)]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="484,91" sap2010:WorkflowViewState.IdRef="LogMessage_33" Level="Info" Message="[rowArr(&quot;Order ID&quot;).ToString]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:LogMessage>
                          <If Condition="[rowArr(&quot;Expiration Date&quot;).ToString=DateAndTime.Now.ToString(&quot;yyyy-MM-dd&quot;)]" sap:VirtualizedContainerService.HintSize="484,208" sap2010:WorkflowViewState.IdRef="If_11">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Queue Item" FolderPath="Health Care" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddQueueItem_1" Priority="High" QueueType="[in_Config(&quot;OrchestratorQueueName&quot;).ToString]" Reference="[rowArr(&quot;Order ID&quot;).ToString]">
                                <ui:AddQueueItem.ItemInformation>
                                  <InArgument x:TypeArguments="x:String" x:Key="OrderID">[rowArr.Item("Order ID").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="RowIDs">[String.join(";",dtRowID.AsEnumerable.Where(function(x) X("Order ID").ToString = item).CopyToDataTable().AsEnumerable.Select(function(x) x("RowID").ToString).ToList())]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="ExpirationDate">[rowArr.Item("Expiration Date").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="CandidateEmail">[rowArr.Item("Primary").ToString]</InArgument>
                                </ui:AddQueueItem.ItemInformation>
                              </ui:AddQueueItem>
                            </If.Then>
                            <If.Else>
                              <ui:AddQueueItem ServiceBaseAddress="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Add Queue Item" FolderPath="Health Care" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddQueueItem_2" Priority="Normal" QueueType="[in_Config(&quot;OrchestratorQueueName&quot;).ToString]" Reference="[rowArr(&quot;Order ID&quot;).ToString]">
                                <ui:AddQueueItem.ItemInformation>
                                  <InArgument x:TypeArguments="x:String" x:Key="OrderID">[rowArr.Item("Order ID").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="RowIDs">[String.join(";",dtRowID.AsEnumerable.Where(function(x) X("Order ID").ToString = item).CopyToDataTable().AsEnumerable.Select(function(x) x("RowID").ToString).ToList())]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="ExpirationDate">[rowArr.Item("Expiration Date").ToString]</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="CandidateEmail">[rowArr.Item("Primary").ToString]</InArgument>
                                </ui:AddQueueItem.ItemInformation>
                              </ui:AddQueueItem>
                            </If.Else>
                          </If>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                </Sequence>
              </If.Then>
              <If.Else>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_34" Level="Info" Message="[&quot;New Rows count : 0&quot;]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
              </If.Else>
            </If>
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1034,51" sap2010:WorkflowViewState.IdRef="LogMessage_35" Level="Info" Message="[&quot;Add to Queue ended&quot;]">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:LogMessage>
            <s:LogMessage Logs="{x:Null}" DisplayName="Log message" sap:VirtualizedContainerService.HintSize="1034,22" sap2010:WorkflowViewState.IdRef="LogMessage_36" Level="Info" Message="Add to Queue ended" />
          </Sequence>
        </ActivityAction>
      </usa:SmartsheetScopeActivity.Body>
      <usa:SmartsheetScopeActivity.ConnectionParameters>
        <scg:List x:TypeArguments="ucmc:ConnectionParam" Capacity="4">
          <ucmc:ConnectionParam Value="{x:Null}" ArgumentDirection="In" ArgumentType="x:String" Description="The API token to use" Mandatory="True" Name="API Access Token">
            <ucmc:ConnectionParam.ArgumentValue>
              <InArgument x:TypeArguments="x:String">[in_Config("SmartSheet_AccessToken").ToString]</InArgument>
            </ucmc:ConnectionParam.ArgumentValue>
          </ucmc:ConnectionParam>
        </scg:List>
      </usa:SmartsheetScopeActivity.ConnectionParameters>
      <usa:SmartsheetScopeActivity.DesignConnectionParameters>
        <scg:List x:TypeArguments="ucmc:ConnectionParam" Capacity="0" />
      </usa:SmartsheetScopeActivity.DesignConnectionParameters>
      <usa:SmartsheetScopeActivity.ServiceFactory>
        <uss:SmartsheetServiceFactory />
      </usa:SmartsheetScopeActivity.ServiceFactory>
      <usa:SmartsheetScopeActivity.SupportedAuthTypes>
        <scg:List x:TypeArguments="x:String" Capacity="4">
          <x:String>Existing Connection</x:String>
          <x:String>OAuth Authorization Code</x:String>
          <x:String>API Token</x:String>
          <x:String xml:space="preserve">OAuth Passthrough </x:String>
        </scg:List>
      </usa:SmartsheetScopeActivity.SupportedAuthTypes>
      <usa:SmartsheetScopeActivity.TelemetryProperties>
        <scg:Dictionary x:TypeArguments="ubt:TelemetryGroup, scg:IDictionary(x:String, x:String)" />
      </usa:SmartsheetScopeActivity.TelemetryProperties>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </usa:SmartsheetScopeActivity>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="1110,51" sap2010:WorkflowViewState.IdRef="CommentOut_7">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,242" sap2010:WorkflowViewState.IdRef="Sequence_31">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:BuildDataTable DataTable="[out_dtRowID]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;RowID&quot; type=&quot;xs:string&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" />
          <usa:SmartsheetScopeActivity DesignConnectionRequest="{x:Null}" ExistingConnection="{x:Null}" SelectedDesignAuthType="{x:Null}" SwaggerClient="{x:Null}" Connection="[conn]" DesignConnectionEnabled="False" DisplayName="Smartsheet Application Scope" ExistingConnectionType="usm:SmartsheetConnection" sap:VirtualizedContainerService.HintSize="334,51" sap2010:WorkflowViewState.IdRef="SmartsheetScopeActivity_1" RefreshCacheEnabled="False" SelectedAuthType="API Token" TelemetryEnabled="False" ThrowExceptionOnError="False">
            <usa:SmartsheetScopeActivity.Body>
              <ActivityAction x:TypeArguments="ubac:ScopeActivityContext">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ubac:ScopeActivityContext" Name="ScopeActivityContext" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="767,2284" sap2010:WorkflowViewState.IdRef="Sequence_10">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sam:Sheet" Name="sheetVal" />
                    <Variable x:TypeArguments="ubmr:ResponseStatus" Name="respStatus" />
                    <Variable x:TypeArguments="sam:Sheet[]" Name="shts" />
                    <Variable x:TypeArguments="sam:Sheet[]" Name="Allsheets" />
                    <Variable x:TypeArguments="sam:Report" Name="rpt" />
                    <Variable x:TypeArguments="sd:DataTable" Name="tdt" />
                    <Variable x:TypeArguments="x:Int32" Name="index" />
                    <Variable x:TypeArguments="x:Int32" Name="uniqueOrderIDCount" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <usar:GetReport BusinessEntityName="{x:Null}" Status="{x:Null}" ConfiguredBusinessEntity="GetReport" CrudOperation="Function" DesignConnectionEnabled="False" DisplayName="Get Report" sap:VirtualizedContainerService.HintSize="725,51" sap2010:WorkflowViewState.IdRef="GetReport_2" ScopeActivityType="usa:SmartsheetScopeActivity">
                    <usar:GetReport.BusinessEntity>
                      <ubme:BusinessEntity AuthFields="{x:Null}" Connection="{x:Null}" Id="{x:Null}" Metadata="{x:Reference __ReferenceID1}" Name="GetReport">
                        <ubme:BusinessEntity.AllFields>
                          <scg:List x:TypeArguments="ubme:EntityField" Capacity="0" />
                        </ubme:BusinessEntity.AllFields>
                        <ubme:BusinessEntity.EntityMetadata>
                          <ubme:EntityMetadata Description="{x:Null}" EligibleOperations="-1" IsCustomEntity="False" Name="GetReport">
                            <ubme:EntityMetadata.Metadata>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object" x:Name="__ReferenceID1">
                                <x:Type Type="sa:SmartsheetClient" x:Key="Client" />
                              </scg:Dictionary>
                            </ubme:EntityMetadata.Metadata>
                          </ubme:EntityMetadata>
                        </ubme:BusinessEntity.EntityMetadata>
                        <ubme:BusinessEntity.SelectedFields>
                          <scg:List x:TypeArguments="ubme:EntityField" Capacity="0" />
                        </ubme:BusinessEntity.SelectedFields>
                        <ubme:BusinessEntity.TelemetryProperties>
                          <scg:Dictionary x:TypeArguments="ubt:TelemetryGroup, scg:IDictionary(x:String, x:String)" />
                        </ubme:BusinessEntity.TelemetryProperties>
                      </ubme:BusinessEntity>
                    </usar:GetReport.BusinessEntity>
                    <usar:GetReport.PopulatedAPIParameters>
                      <scg:Dictionary x:TypeArguments="x:String, ubme:EntityField" />
                    </usar:GetReport.PopulatedAPIParameters>
                    <usar:GetReport.SelectedFields>
                      <scg:List x:TypeArguments="ubme:EntityField" Capacity="8">
                        <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" ArgumentDirection="In" ArgumentType="x:Int64" DataType="Int64" Description="the Id of the report" DisplayName="ReportId" FieldName="ReportId" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="True" ShouldFilterOnChange="False">
                          <ucm:CodeGenEntityField.ArgumentValue>
                            <InArgument x:TypeArguments="x:Int64">[Int64.Parse(in_Config("SmartSheet_Report_ID").ToString)]</InArgument>
                          </ucm:CodeGenEntityField.ArgumentValue>
                        </ucm:CodeGenEntityField>
                        <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" ArgumentDirection="In" ArgumentType="x:String" DataType="String" Description="If populated will download the report to the specified folder" DisplayName="Local Folder" FieldName="Local Folder" FormDataType="FolderPicker" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                          <ucm:CodeGenEntityField.ArgumentValue>
                            <InArgument x:TypeArguments="x:String" />
                          </ucm:CodeGenEntityField.ArgumentValue>
                        </ucm:CodeGenEntityField>
                        <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" ArgumentDirection="In" ArgumentType="sam:ReportInclusion[]" DataType="ReportInclusion[]" Description="used to specify the optional objects to include." DisplayName="Include" FieldName="Include" FormDataType="MultiSelect" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                          <ucm:CodeGenEntityField.ArgumentValue>
                            <InArgument x:TypeArguments="sam:ReportInclusion[]" />
                          </ucm:CodeGenEntityField.ArgumentValue>
                        </ucm:CodeGenEntityField>
                        <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" ArgumentDirection="In" ArgumentType="x:Int32" DataType="Int32" Description="Number of rows per page" DisplayName="Page Size" FieldName="Page Size" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                          <ucm:CodeGenEntityField.ArgumentValue>
                            <InArgument x:TypeArguments="x:Int32">10000</InArgument>
                          </ucm:CodeGenEntityField.ArgumentValue>
                        </ucm:CodeGenEntityField>
                        <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" ArgumentDirection="In" ArgumentType="x:Int32" DataType="Int32" Description="Page number (1-based) to return" DisplayName="Page" FieldName="Page" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                          <ucm:CodeGenEntityField.ArgumentValue>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ucm:CodeGenEntityField.ArgumentValue>
                        </ucm:CodeGenEntityField>
                        <ucm:CodeGenEntityField ContainingType="{x:Null}" DefaultValue="{x:Null}" FieldFullName="{x:Null}" Metadata="{x:Null}" OriginalArgumentType="{x:Null}" SampleValue="{x:Null}" Value="{x:Null}" ArgumentDirection="Out" ArgumentType="sam:Report" DataType="Report" Description="The report object" DisplayName="Report" FieldName="Report" FormDataType="ExpressionTextBox" IsCustomField="False" IsDefault="False" IsDeletable="True" IsIdField="False" IsSelected="False" Mandatory="False" ShouldFilterOnChange="False">
                          <ucm:CodeGenEntityField.ArgumentValue>
                            <OutArgument x:TypeArguments="sam:Report">[rpt]</OutArgument>
                          </ucm:CodeGenEntityField.ArgumentValue>
                        </ucm:CodeGenEntityField>
                      </scg:List>
                    </usar:GetReport.SelectedFields>
                    <usar:GetReport.ServiceFactory>
                      <uss:SmartsheetServiceFactory />
                    </usar:GetReport.ServiceFactory>
                    <usar:GetReport.TelemetryProperties>
                      <scg:Dictionary x:TypeArguments="ubt:TelemetryGroup, scg:IDictionary(x:String, x:String)" />
                    </usar:GetReport.TelemetryProperties>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </usar:GetReport>
                  <ui:ForEach x:TypeArguments="sam:ReportColumn" CurrentIndex="[index]" DisplayName="For Each Column Name" sap:VirtualizedContainerService.HintSize="307,248" sap2010:WorkflowViewState.IdRef="ForEach`1_10" Values="[rpt.Columns]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="sam:ReportColumn">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sam:ReportColumn" Name="item" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="242,114" sap2010:WorkflowViewState.IdRef="Sequence_19">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:AddDataColumn x:TypeArguments="x:String" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" AllowDBNull="True" ColumnName="[item.Title]" DataTable="[out_dtRowID]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1" />
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                  <Assign DisplayName="uniqueOrderIDCount" sap:VirtualizedContainerService.HintSize="725,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[uniqueOrderIDCount]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">1</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:AddDataColumn x:TypeArguments="x:String" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" AllowDBNull="True" ColumnName="uniqueOrderIDCount" DataTable="[out_dtRowID]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="725,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_3" />
                  <ui:ForEach x:TypeArguments="sam:ReportRow" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Fetch Row ID" DisplayName="For Each Row " sap:VirtualizedContainerService.HintSize="725,1458" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[rpt.Rows]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="sam:ReportRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sam:ReportRow" Name="row" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="689,1297" sap2010:WorkflowViewState.IdRef="Sequence_15">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="sd:DataRow" Name="rowArr" />
                          </Sequence.Variables>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="New Row Data" sap:VirtualizedContainerService.HintSize="647,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                            <Assign.To>
                              <OutArgument x:TypeArguments="sd:DataRow">[rowArr]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="sd:DataRow">[out_dtRowID.NewRow]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign DisplayName="Row ID" sap:VirtualizedContainerService.HintSize="647,60" sap2010:WorkflowViewState.IdRef="Assign_16">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Object">[rowArr(0)]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Object">[row.Id.Value.ToString]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:ForEach x:TypeArguments="sam:ReportColumn" CurrentIndex="[index]" DisplayName="For Each Column" sap:VirtualizedContainerService.HintSize="647,761" sap2010:WorkflowViewState.IdRef="ForEach`1_11" Values="[rpt.Columns]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="sam:ReportColumn">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="sam:ReportColumn" Name="rcVal" />
                                </ActivityAction.Argument>
                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="611,627" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If Condition="[Not String.IsNullOrEmpty(row.Cells(index).DisplayValue)]" sap:VirtualizedContainerService.HintSize="569,208" sap2010:WorkflowViewState.IdRef="If_3">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <If.Then>
                                      <Assign DisplayName="Cell value" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_17">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[rowArr(index+1)]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Object">[row.Cells(index).DisplayValue.ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                    <If.Else>
                                      <Assign DisplayName="Cell value" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[rowArr(index+1)]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Object">[""]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Else>
                                  </If>
                                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="569,287" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <TryCatch.Try>
                                      <If Condition="[Not String.IsNullOrEmpty(row.Cells(index).Value.ToString)]" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="If_6">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <If.Then>
                                          <Assign DisplayName="Cell value" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_24">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Object">[rowArr(index+1)]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Object">[row.Cells(index).Value.ToString]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </If.Then>
                                      </If>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s1:Exception" sap:VirtualizedContainerService.HintSize="404,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s1:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s1:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                </Sequence>
                              </ActivityAction>
                            </ui:ForEach.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:ForEach>
                          <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="647,51" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                            <ui:CommentOut.Body>
                              <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,183" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,91" sap2010:WorkflowViewState.IdRef="LogMessage_25" Message="[out_dtRowID.AsEnumerable.Where(function(x) x.Item(&quot;Order ID&quot;).ToString = rowArr(&quot;Order ID&quot;).ToString).Count&gt;0]" />
                              </Sequence>
                            </ui:CommentOut.Body>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:CommentOut>
                          <If Condition="[out_dtRowID.AsEnumerable.Where(function(x) x.Item(&quot;Order ID&quot;).ToString = rowArr(&quot;Order ID&quot;).ToString).Count&gt;0]" DisplayName="Is New Unique OrderID" sap:VirtualizedContainerService.HintSize="647,51" sap2010:WorkflowViewState.IdRef="If_4">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Else>
                              <Sequence DisplayName="New Unique Found" sap:VirtualizedContainerService.HintSize="304,252" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Row ID" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[rowArr(out_dtRowID.Columns.Count-1)]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">[uniqueOrderIDCount]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign DisplayName="Increment uniqueOrderIDCount" sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[uniqueOrderIDCount]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[uniqueOrderIDCount+1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </If.Else>
                          </If>
                          <ui:AddDataRow ArrayRow="{x:Null}" DataRow="[rowArr]" DataTable="[out_dtRowID]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="647,22" sap2010:WorkflowViewState.IdRef="AddDataRow_2" />
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="725,91" sap2010:WorkflowViewState.IdRef="LogMessage_14" Level="Info" Message="[&quot;Fetching row id's completed&quot;]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:LogMessage>
                  <s:LogMessage Logs="{x:Null}" DisplayName="Log message" sap:VirtualizedContainerService.HintSize="725,22" sap2010:WorkflowViewState.IdRef="LogMessage_15" Level="Info" Message="Fetching row id's completed" />
                </Sequence>
              </ActivityAction>
            </usa:SmartsheetScopeActivity.Body>
            <usa:SmartsheetScopeActivity.ConnectionParameters>
              <scg:List x:TypeArguments="ucmc:ConnectionParam" Capacity="4">
                <ucmc:ConnectionParam Value="{x:Null}" ArgumentDirection="In" ArgumentType="x:String" Description="The API token to use" Mandatory="True" Name="API Access Token">
                  <ucmc:ConnectionParam.ArgumentValue>
                    <InArgument x:TypeArguments="x:String">[in_Config("SmartSheet_AccessToken").ToString]</InArgument>
                  </ucmc:ConnectionParam.ArgumentValue>
                </ucmc:ConnectionParam>
              </scg:List>
            </usa:SmartsheetScopeActivity.ConnectionParameters>
            <usa:SmartsheetScopeActivity.DesignConnectionParameters>
              <scg:List x:TypeArguments="ucmc:ConnectionParam" Capacity="0" />
            </usa:SmartsheetScopeActivity.DesignConnectionParameters>
            <usa:SmartsheetScopeActivity.ServiceFactory>
              <uss:SmartsheetServiceFactory />
            </usa:SmartsheetScopeActivity.ServiceFactory>
            <usa:SmartsheetScopeActivity.SupportedAuthTypes>
              <scg:List x:TypeArguments="x:String" Capacity="4">
                <x:String>Existing Connection</x:String>
                <x:String>OAuth Authorization Code</x:String>
                <x:String>API Token</x:String>
                <x:String xml:space="preserve">OAuth Passthrough </x:String>
              </scg:List>
            </usa:SmartsheetScopeActivity.SupportedAuthTypes>
            <usa:SmartsheetScopeActivity.TelemetryProperties>
              <scg:Dictionary x:TypeArguments="ubt:TelemetryGroup, scg:IDictionary(x:String, x:String)" />
            </usa:SmartsheetScopeActivity.TelemetryProperties>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </usa:SmartsheetScopeActivity>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1110,91" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Read SmartSheet Ended&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <s:LogMessage Logs="{x:Null}" DisplayName="Log message" sap:VirtualizedContainerService.HintSize="1110,22" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="Read SmartSheet Ended" />
  </Sequence>
</Activity>